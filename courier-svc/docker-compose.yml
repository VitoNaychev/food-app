version: '3'
services:
  courier-db:
    image: postgres:latest
    container_name: courier-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./sql-scripts:/docker-entrypoint-initdb.d
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 10

  courier-svc:
    build:
      context: ..
      dockerfile: ./courier-svc/Dockerfile
    container_name: courier-svc
    ports:
      - "4040:8080"
    environment:
      SECRET: ${SECRET}
      POSTGRES_HOST: courier-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      KAFKA_BROKERS: kafka:29092
    depends_on:
      courier-db:
        condition: service_healthy
    networks:
      - my-network
      - kafka-network

networks:
  my-network:
    driver: bridge
  kafka-network:
    external: true